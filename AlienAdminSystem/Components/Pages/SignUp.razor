@page "/signup"
@using System.ComponentModel.DataAnnotations

<EditForm Model="@SignUpModel" OnValidSubmit="HandleSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="container mt-5">
		<div class="row justify-content-center">
			<div class="col-md-6">
				<h3>Alien Sign Up Page</h3>
				<div class="mb-3">
					<label for="username" class="form-label">Enter username: </label>
					<InputText id="username" type="text" class="form-control" @bind-Value="SignUpModel.Username" />
					<ValidationMessage For="@(() => SignUpModel.Username)" />
				</div>

				<div class="mb-3">
					<label for="password" class="form-label">Enter password: </label>
					<InputText id="password" type="password" class="form-control" @bind-Value="SignUpModel.Password" />
					<ValidationMessage For="@(() => SignUpModel.Password)" />
				</div>

				<div class="mb-3">
					<label for="confirmPassword" class="form-label">Confirm password: </label>
					<InputText id="confirmPassword" type="password" class="form-control" @bind-Value="SignUpModel.ConfirmPassword" />
					<ValidationMessage For="@(() => SignUpModel.ConfirmPassword)" />
				</div>
				<button type="submit" class="btn btn-primary">Sign Up</button>
				@if (SignUpModel.ConfirmPassword == SignUpModel.Password && !string.IsNullOrEmpty(SignUpModel.Password))
				{
					<p>
						Password matches!
					</p>
				}

			</div>
		</div>
	</div>
</EditForm>

@code {

	private SignUpModel SignUpModel = new SignUpModel();

	private async Task HandleSubmit()
	{

	}

}
